priority 1

#----------------------------------------------------------
# Class Definitions
#----------------------------------------------------------
#
snippet lm "Laravel Model"
<?php

namespace ${1:App}`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = '\\' +  m.group().replace('/', '\\')
`;

class `!p snip.rv=snip.basename` extends Model
{
	/**
	 * The attributes that are mass assignable.
	 *
	 * @var array
	 */
	protected $fillable = [$0];
}
endsnippet

snippet lc "Laravel Controller"
<?php

namespace ${1:App}`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = '\\' +  m.group().replace('/', '\\')
`;

class `!p snip.rv=snip.basename` extends Controller
{
	/**
	 * Create a new `!p snip.rv=re.sub('([a-z])([A-Z])', '\g<1> \g<2>', snip.basename).lower()`.
	 *
	 * @return `!p snip.rv=snip.basename`
	 */
	public function __construct()
	{
		$0
	}
}
endsnippet

#----------------------------------------------------------
# Router
#----------------------------------------------------------
#

snippet rr "Router Resource"
$router->resource('${1:name}', '${2:${1/\w+\s*/\u$0/g}}Controller');

endsnippet

snippet rrp "Router Resource with Parameters"
$router->resource('${1:name}', '${2:${1/\w+\s*/\u/g}}Controller', ['only' => [$0]]);
endsnippet

snippet rg "Router Group"
$router->group([${1}], function ($router) {
	$0
});
endsnippet

snippet rc "Router Closure"
$router->get('${1:url}', ['as' => '${2}', function () {
	$0
}]);
endsnippet

#----------------------------------------------------------
# Factory
#----------------------------------------------------------
#
snippet fd "Model Factory"
$factory->define(${1}::class, function (Faker\Generator $faker) {
	return [
		$0
	];
});
endsnippet

#----------------------------------------------------------
# Schema
#----------------------------------------------------------
#
snippet f "Create a field"
$table->${1:string}('${2:field}')${3:->nullable()};$0
endsnippet

snippet fk "Create a foreign field"
$table->integer('${1:foreign_key}')->unsigned();
$table->foreign('$1')->references('id')->on('${2:${1/_id/s/g}}')->onDelete('cascade');$0
endsnippet

snippet sc "Create a table"
Schema::create('${1}', function (Blueprint $table) {
	$table->increments('id');

	$0

	$table->timestamps();
});
endsnippet

snippet sd "Drop the table"
Schema::drop('${1}');
endsnippet
